<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnELIMINAR_PROCESO.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAMXSURBVDhPZdJtTE1xHAfw86pX1b3ndu45PeumB0mF
        qaXuQk002tIiyhpJFq3FjbXm6UV27FquVq6iEaKHq1KWQi88jCRz6ZFbqVYWMj0Y1quv3/94GPPis53f
        7/f9/87Ozp8DwH1vv/THHcleQ/JJAxkjE6SJHCXav7PMPwtaJXu5faGIvt2bMH4yF9O1pzFjMWHceAAD
        WZvR7usMyhj/W/Dt7kWuRbIv6VgbitkbJsydz8XMqVR8PrJOMWNMwVxZDubqTXgWrwdlzewMoyy4JToU
        dqxfidkrxzCVtwpDKcF4FOKCNg8ere5qPAx2gS05CB8NUZitPExLokBnjF/bKjjupujg1qKTMHU2D5PZ
        4eharQP17pNkoiX6JmdH9KdGYHJfmOKT2YBWf3eWc+PqtQ6FLzMSMbE3At3x/qC6iWhnm8vZTN8gqfCm
        YA/eH0/G6I5leJ0UiImscLxMT2DZQq5O62gdyk3ESFoI2pZ4gOr1043nWF9vkdQYyM/Eu4Ik+qwg3PaT
        0OLnrGSHDUks28ddFxznhzOjMLg1EDUSD6rtiL5aVKP30G6MHUygtwag2UdkM7laVMG2ZTGGMyJZPc9d
        FVRfehMC0L/JH9ckDajWV4k8XhkyMJwbj554PzTSr6W+PFVTwvLzfYkBYNgzVymorJ3R3uiO88bNFYG4
        TIet+9Nhy4qDNVYHi04LysgfqopZNro+yA89G3zxPMab9Qe5CidVYVuoN17EeKJzVyKe5+zEQEYs/Q0P
        1CwQQHN58rKJY+jZ0rUnWcneC9OxWQlX7qR2q3SX8DTCFT1p0YqOCBdUeQqgmUzsiJ5UtMatQc/21eiM
        dMUld5HNFysXyaxRG6u9BDwJkxT3lrmiOngRyiUBZVon1CwPwuPMVAwY0pR5rU4AnTkzfuHUz5s4Vmbk
        SjRqcxXdvAdLBXRtXA7bsWyMlp7AqFmG7XgOrNuildl1Tw1Ylp1hlAWj5pOKYg1vNGs1qPPicWcRj/tL
        frobwMNCvXOiBpQp+p1nlAUjpfIfJp73JDIZJPjlLSkiPn9nR0pl7gekUwoUNve3ogAAAABJRU5ErkJg
        gg==
</value>
  </data>
  <data name="btnAGREGAR_PROCESO.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAEMSURBVDhPndOtS8NRFMbx+wcYDJYlk2mWWURQBFeU
        oUHxDUENG/gSxLGwIcOBIogiOOGKiJYJMlkQFgRhIDNZDEt2wba/4fE+8Zxz0y98ypfnpMt1AIyTl3Uf
        QPGxrQlUe17BX78nsOkdmUDVxiI+etcCm96RCVR5XMD794XApndkApXu5tD+OhXY9I7cwU3WB9Ban0dC
        bBN4t3s5hZ/frvHUKQqxDW9d/mwc9287ifDWbR5nUH/dSoS3bq2cxnlzORHeuqXiiA+g1Ro5IbYJvHkW
        mt8fRvlhRmDTOzKBZgspHN5OCGx6RyZQdnsIe/UxgU3vyASa3hhE/mpUYNM7MoEmVwd8ACXyneH+AS+X
        rQ+E1u/kAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AP//AAD///gf///8P///////
</value>
  </data>
</root>
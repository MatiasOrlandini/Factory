<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAz2gPANFqEQDTbBQA1G4WANBrGADRbBkA1nAZANVzHgDYchwA2nQfAM9jJwDPZCgA0GcrANBo
        KwDQai0A0WwvANZ1IADcdiEA3ngkANJuMADTcDIA1HI0ANV1NgDRfjYA1nk5ANh7OwDYfDoA2H48AOB6
        JwDheygA4nwqAOR+LQDgfzkAoVhCAK1mWQCtaFwAr21hALFxZQCydmoAtHlvALV9cwDagT0A3IQ/AOaB
        LwDngTAA6IMyAOqFNQDhgTsA4oQ+AOyHOADmiD8A7ok6APCLPQC2gXgAuIV8ANmCQADahEIA3IZBANyH
        RADdiEMA3IlEAOOIQQDni0IA5ItFAOiPRQDljkgA8o1AAPSPQgDwjkQA5pFKAOeUTQDpk0kA6pZNAPaR
        RgDqmVEA7JxSAOmbVADqnlcA7Z5UAPefVADroloA7qJYAO+lWwDspV0A+aVZAPCpXgDtp2AA7qtiAO+u
        ZgDhoWoA8axiAPKvZQDysWYA8bFoAPK0agD0tmsA8rduAPS4bgDos3kA6bd9APK6cQDzvXMA9bxxAPe/
        dAD2wHUA9cN4APbFewD4w3gA+MZ7APnHfAD5yn4ANh2FADoijQA7JJAAOyiTAD0pmAAAAKoAAACxAAAA
        tQACA7gABQi/AEAunwBCM6YARDetAEY7swBIP7kASkO+AAkNxQAMFMwAAAHQAAcJ1QAAAN4AAwTfAAwP
        2AAQGdIAEhjbABUg2AAZIN4AGSbdAAcJ4AANEOEAFBrjAB0k5QAdLOMAHTDwABwx+AAgKuIAJjDnACg0
        5QAiMugAKDfsACY57QAwPOkAKz/xACo/9QAxQOkAO0rsADpM7AA4TfIAOVD2AExGxABOSskAT03OAFFQ
        0gBSU9YAU1XZAGxhwABtZMQARU3hAEdY7gBFWPAATGDxAE9l8wBUaPEAU2n0ALmIgAC6jIUAvI+JAL2T
        jAC+lpAAv5mTAKSIpQDMnogAwJ2XANuuhgD6zYIA+8+EAPzShgD91YkA/tmNAPnAlgD/3JAAtrbfALi4
        4gC7u+UAvb3nANbQygDa2toA3d3dAMPD4gDh4eEA5eXlAOnp6QDt7e0A7u75AP///wD///8AAAAAACwA
        LwBLAFAAaQBwAIcAkAClALAAxADPAOEA8ADwEf8A8jH/APRR/wD2cf8A95H/APmx/wD70f8A////AAAA
        AAAbAC8ALQBQAD8AcABSAJAAYwCwAHYAzwCIAPAAmRH/AKYx/wC0Uf8AwnH/AM+R/wDcsf8A69H/AP//
        /wAAAAAACAAvAA4AUAAVAHAAGwCQACEAsAAmAM8ALADwAD4R/wBYMf8AcVH/AIxx/wCmkf8Av7H/ANrR
        /wD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEpFRUVQVVVVVVVVVVVVVVVV
        VVVVVUoAAAAAAAAAAAAASjorKmvAwMDAwMDAwMDAwMDAwMDASgAAAAAAAAAAAABKPCsqar6+vr6+vr6+
        vr6+vr6+vsBKAAAAAAAAAAAAAEo8Kippvb29vb29vb29vb29vb29vkoAAAAAAAAAAAAASj0qKma8vLy8
        vLy8vLy8vLy8vLy+SgAAAAAAAAAAAABKPSocZbu7u7u7u7u7u7u7u7u7u75KAAAAAAAAAAAAAEQ9Khxh
        b29vb29vb29vb29vb29vvUQAAAAAAAAAAAAAQz0cGl9ubm5ubm5ubm5ubm5ubm68QwAAAAAAAAAAAAA1
        PRwbXmxsbGxsbGxsbGxsbGxsbLs1AAAAAAAAAAAAADQ9GhpZaWlpaWlpaWm4aWlpaWS5ujQAAAAAAAAA
        AAAAMjsaGVhnZ2dnZ2dnZ6a2Z2djqbVvMgAAAAAAAAAAAAAvOxkZV2JiYmJiYmJipZK3YqiStG0vAAAA
        AAAAAAAAAC46GRdUX19fX19fX1+koJenm5uzbC4AAAAAAAAAAAAALDoXF1FdXV1dXV1dXaOtn5GvmrJo
        LAAAAAAAAAAAAAAgORcXTltbW1tbW1tboquurK6YsWcgAAAAAAAAAAAAAB85FhZNVlZWVlZWVlahnqqq
        qpawYh8AAAAAAAAAAAAAHTkWFUtTU1NTU1NTU3+cnZ2dkDdgHQAAAAAAAAAAAAATOBUVR1JSUlJSUlJS
        fpWZmZmLNl4TAAAAAAAAAAAAABI4FRRGT09PT09PT099k5SUlIkpXBIAAAAAAAAAAAAAChwUEEJLS0tL
        S0tLS3yKj4+PhyhbCgAAAAAAAAAAAAAJHBAPQElJSUlJSUlJe4iOjo6BJ1YJAAAAAAAAAAAAAAccDg4+
        SEhISEhISEh6ho2NjYAmUwcAAAAAAAAAAAAABBoNDTFBQUFBQUFBQXSDjIyMeSVSBAAAAAAAAAAAAAAD
        GQwMMD8/Pz8/Pz8/coKFhYV4JE8DAAAAAAAAAAAAAAEZDAshMzMzMzMzMzNxgoSEhHcjTAEAAAAAAAAA
        AAAAARcXF0dPT09PT09PT3OChISEdydPAQAAAAAAAAAAAAABBgYFCBERERERERERcHZ3d3d1IhEBAAAA
        AAAAAAAAAFoYxcbGx8nJysrLzMzIwcLCw8TNzs4AAAAAAAAAAAAAAFoDBAcJChITHh8gLS4vMjQ1Q0S/
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP/////4AAAf+AAAH/gAAB/4AAAf+AAAH/gAAB/4AAAf+AAAH/gAAB/4AAAf+AAAH/gA
        AB/4AAAf+AAAH/gAAB/4AAAf+AAAH/gAAB/4AAAf+AAAH/gAAB/4AAAf+AAAH/gAAB/4AAAf+AAAH/gA
        AB/4AAAf/AAAP///////////
</value>
  </data>
</root>